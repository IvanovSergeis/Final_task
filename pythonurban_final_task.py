# -*- coding: utf-8 -*-
"""PythonUrban_final_task.ipynb

# Итоговый проект. Улицы. Объекты культурного наследия.
"""

# TODO собрать установку всех необходимых модулей в одном месте

# TODO собрать импорты всех модулей в одном месте

TILES = "CartoDB positron"  # Название подложки для карт

# TODO указать любой район Санкт-Петербург из OSM https://wiki.openstreetmap.org/wiki/RU:%D0%A1%D0%B0%D0%BD%D0%BA%D1%82-%D0%9F%D0%B5%D1%82%D0%B5%D1%80%D0%B1%D1%83%D1%80%D0%B3/%D0%A0%D0%B0%D0%B9%D0%BE%D0%BD%D1%8B
TERRITORY_NAME = ...  # название территории для которой будут строиться слои

# TODO указать ссылку на файл из вашего github репозитория, которая начинается с https://raw.githubusercontent.com/
KGIOP_FILE_URL = ...  # ссылка на слой с объектами культурного наследия
STREETS_FILE_URL = ...  # ссылка на слой с улицами

"""## Территория

### Загрузка территории из OSM (Extract)
"""

# TODO загрузить geodataframe с геометрией для территории TERRITORY_NAME

"""## Улицы

### Загрузка файла с улицами (Extract)
"""

# TODO отфильтровать улицы по маске геометрии территории полученной ранее

"""### Обработка данных с улицами (Transform)"""

# TODO сгруппировать и объединить геометрии с одинаковыми названиями

"""### Сохранение слоя с улицами (Load)"""

# TODO переименовать столбцы в русские названия, кроме столбца geometry

# TODO для того чтобы переименовать индекс, нужно обратиться и нему и вызвать от него метод rename (https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.Index.rename.html)

# TODO сохранить слой в географической проекции в формате GeoJSON

"""## Объекты культурного наследия

### Загрузка объектов культурного наследия (Extract)
"""

# TODO отфильтровать улицы по маске геометрии территории полученной ранее

"""### Обработка объектов культурного наследия (Transform)"""

# TODO добавить два столбца lon и lat, в которых будут долгота и широта

"""### Сохранение слоя с объектами культурного наследия (Load)"""

# TODO переименовать столбцы в русские названия, кроме столбца geometry

# TODO сохранить слой в географической проекции в формате GeoJSON
